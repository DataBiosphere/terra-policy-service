plugins {
    id 'idea'
    id 'jacoco'
    id 'java'

    id 'com.diffplug.spotless'
    id 'com.github.spotbugs'
    id 'org.hidetake.swagger.generator'
}

boolean isGithubAction = System.getenv().containsKey("GITHUB_ACTIONS")

if (!isGithubAction) {
    tasks.withType(JavaExec).configureEach {
        systemProperty 'spring.profiles.include', 'human-readable-logging'
    }
    tasks.withType(Test).configureEach {
        systemProperty 'spring.profiles.include', 'human-readable-logging'
    }
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    maven {
        // Terra proxy for maven central
        url 'https://us-central1-maven.pkg.dev/dsp-artifact-registry/maven-central/'
    }
    mavenCentral()
    maven {
        url 'https://us-central1-maven.pkg.dev/dsp-artifact-registry/libs-release/'
    }
    maven {
        url 'https://us-central1-maven.pkg.dev/dsp-artifact-registry/libs-snapshot/'
    }
}

dependencies {
    compileOnly "com.google.code.findbugs:annotations:3.0.1"
    implementation 'org.slf4j:slf4j-api:2.0.7'

    testImplementation 'ch.qos.logback:logback-classic:1.5.18'
    testImplementation 'ch.qos.logback:logback-core:1.5.18'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    implementation 'io.swagger.core.v3:swagger-annotations:2.2.0'

    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.47'

    // these next three versions should match the versions used by terra-common-lib
    implementation "io.opentelemetry:opentelemetry-api:1.49.0"
    implementation "io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter:2.12.0"
    implementation "com.google.cloud.opentelemetry:exporter-trace:0.36.0"
}

tasks.named('test') {
    useJUnitPlatform()
}

version = gradle.releaseVersion
group = 'bio.terra'

spotless {
    java {
        target 'src/*/java/**/*.java'
        googleJavaFormat()
    }
}

// Run spotless check when running in github actions, otherwise run spotless apply.
compileJava {
    if (isGithubAction) {
        dependsOn(spotlessCheck)
    } else {
        dependsOn(spotlessApply)
    }
}

// Spotbugs configuration
spotbugs {
    toolVersion = '4.9.3'
    reportLevel = 'high'
    effort = 'max'
}

spotbugsMain {
    reports {
        if (isGithubAction) {
            sarif.enabled = true
        } else {
            html.enabled = true
        }
    }
}

