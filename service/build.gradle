
import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'bio.terra.policy.java-spring-app-conventions'
    id 'de.undercouch.download'
    id 'com.google.cloud.tools.jib'
    id 'com.srcclr.gradle'
    id 'org.sonarqube'
    id 'com.jfrog.artifactory'
    id 'org.liquibase.gradle' version '2.1.0'
    id 'org.hidetake.swagger.generator'
    id 'io.spring.dependency-management'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

apply from: 'publishing.gradle'
apply from: 'generators.gradle'

dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}

def springBootVersion = '3.1.1'

dependencies {

    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.apache.taglibs:taglibs-standard-impl:1.2.5'
    implementation 'org.json:json:20230227'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.google.oauth-client:google-oauth-client:1.33.3'
    implementation('bio.terra:terra-common-lib:0.0.91-SNAPSHOT') {
        exclude group: 'org.springframework.boot'
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    implementation 'org.yaml:snakeyaml:2.0'

    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'javax.servlet:jstl:1.2'

    implementation "org.springframework.boot:spring-boot-starter-data-jdbc:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
    implementation 'org.springframework.retry:spring-retry:1.3.3'
    implementation 'io.sentry:sentry-spring-boot-starter:6.18.1'

    implementation 'org.apache.commons:commons-lang3:3.0'

    liquibaseRuntime 'org.liquibase:liquibase-core:3.10.0'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime 'org.postgresql:postgresql:42.3.3'
    liquibaseRuntime 'ch.qos.logback:logback-classic:1.4.8'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"

    // Spotbugs dependencies
    compileOnly"com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
    spotbugs "com.github.spotbugs:spotbugs:${spotbugs.toolVersion.get()}"
    spotbugs 'org.slf4j:slf4j-simple:2.0.7'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
        // Fixes warning about multiple occurrences of JSONObject on the classpath
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }

    // Metrics collection
    implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    implementation 'io.micrometer:micrometer-registry-prometheus:1.9.0'

}

task runMinnieKenny(type: Exec) {
    workingDir rootDir

    commandLine './minnie-kenny.sh'
}

test {
    dependsOn runMinnieKenny
    useJUnitPlatform ()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property 'sonar.projectName', 'terra-policy-service'
        property 'sonar.projectKey', 'terra-policy-service'
        property 'sonar.organization', 'broad-databiosphere'
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.sources', 'src/main/java,src/main/resources/templates'
    }
}

liquibase {
    activities {
        catalog {
            changeLogFile 'src/main/resources/db/changelog.xml'
            url 'jdbc:postgresql://localhost:5432/policy_db'
            username 'dbuser'
            password 'dbpwd'
            logLevel 'info'
        }
    }
}
