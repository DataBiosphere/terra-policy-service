{
  "provider": {
    "name": "tps"
  },
  "consumer": {
    "name": "wsm"
  },
  "interactions": [
    {
      "description": "",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/pao"
      },
      "response": {
        "status": 200
      }
    },
    {
      "description": "A for information about a location",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/location",
        "query": {
          "platform": [
            "azure"
          ],
          "location": [
            "West"
          ]
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "regions": [
            "string"
          ],
          "name": "string",
          "description": "string",
          "locations": [
            {
              "regions": [
                "string"
              ],
              "name": "string",
              "description": "string"
            }
          ]
        },
        "matchingRules": {
          "body": {
            "$.name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.description": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.regions[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].description": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].regions[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.name": {
              "type": "RandomString",
              "size": 20
            },
            "$.description": {
              "type": "RandomString",
              "size": 20
            },
            "$[0]": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].description": {
              "type": "RandomString",
              "size": 20
            },
            "$[0][0]": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      }
    },
    {
      "description": "A request for information about a location",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/location",
        "query": {
          "location": [
            "usa",
            "europe",
            "iowa"
          ],
          "platform": [
            "aws"
          ]
        },
        "matchingRules": {
          "query": {
            "platform": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "gcp|azure|aws"
                }
              ],
              "combine": "AND"
            },
            "location": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": ".+"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "regions": [
            "string"
          ],
          "name": "string",
          "description": "string",
          "locations": [
            {
              "regions": [
                "string"
              ],
              "name": "string",
              "description": "string"
            }
          ]
        },
        "matchingRules": {
          "body": {
            "$.name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.description": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.regions[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].description": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].regions[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.name": {
              "type": "RandomString",
              "size": 20
            },
            "$.description": {
              "type": "RandomString",
              "size": 20
            },
            "$[0]": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].description": {
              "type": "RandomString",
              "size": 20
            },
            "$[0][0]": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      }
    },
    {
      "description": "A request for information about a null location",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/location",
        "query": {
          "platform": [
            "gcp"
          ]
        },
        "matchingRules": {
          "query": {
            "platform": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "gcp|azure|aws"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "regions": [
            "string"
          ],
          "name": "string",
          "description": "string",
          "locations": [
            {
              "regions": [
                "string"
              ],
              "name": "string",
              "description": "string"
            }
          ]
        },
        "matchingRules": {
          "body": {
            "$.name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.description": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.regions[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].description": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.locations[0].regions[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.name": {
              "type": "RandomString",
              "size": 20
            },
            "$.description": {
              "type": "RandomString",
              "size": 20
            },
            "$[0]": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].description": {
              "type": "RandomString",
              "size": 20
            },
            "$[0][0]": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      }
    },
    {
      "description": "A request to create a policy",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/pao",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "component": "BPM",
          "attributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "objectId": "e2490de5-5bd3-43d5-b7c4-526e33f71304",
          "objectType": "billing-profile"
        },
        "matchingRules": {
          "body": {
            "$.objectId": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                }
              ],
              "combine": "AND"
            },
            "$.objectType": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "dataset|snapshot|billing-profile|workspace"
                }
              ],
              "combine": "AND"
            },
            "$.component": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "BPM|WSM|TDR"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.objectId": {
              "type": "Uuid"
            },
            "$.objectType": {
              "type": "Regex",
              "regex": "dataset|snapshot|billing-profile|workspace"
            },
            "$.component": {
              "type": "Regex",
              "regex": "BPM|WSM|TDR"
            },
            "$.attributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "response": {
        "status": 200
      }
    },
    {
      "description": "A request to retrieve a policy that doesn't exist",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/pao/1dfc8b68-69f3-b00e-83ee-f00eb3f7e238",
        "matchingRules": {
          "path": {
            "matchers": [
              {
                "match": "regex",
                "regex": "/api/policy/v1alpha1/pao/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
              }
            ],
            "combine": "AND"
          }
        }
      },
      "response": {
        "status": 404
      }
    },
    {
      "description": "A request to create a policy",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/pao",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "component": "WSM",
          "attributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "objectId": "e2490de5-5bd3-43d5-b7c4-526e33f71304",
          "objectType": "billing-profile"
        },
        "matchingRules": {
          "body": {
            "$.objectId": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                }
              ],
              "combine": "AND"
            },
            "$.objectType": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "dataset|snapshot|billing-profile|workspace"
                }
              ],
              "combine": "AND"
            },
            "$.component": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "BPM|WSM|TDR"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.objectId": {
              "type": "Uuid"
            },
            "$.objectType": {
              "type": "Regex",
              "regex": "dataset|snapshot|billing-profile|workspace"
            },
            "$.component": {
              "type": "Regex",
              "regex": "BPM|WSM|TDR"
            },
            "$.attributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "response": {
        "status": 409
      },
      "providerStates": [
        {
          "name": "an existing policy for a workspace"
        }
      ]
    },
    {
      "description": "A request to delete a policy",
      "request": {
        "method": "DELETE",
        "path": "/api/policy/v1alpha1/pao/2a948c7c-93b4-4c9e-aa80-708efa7917dd",
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${objectId}",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200
      },
      "providerStates": [
        {
          "name": "an existing policy for a workspace"
        }
      ]
    },
    {
      "description": "A request to explain the policy",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/pao/38981961-5cc3-4e79-b070-a9ca52a194a1/explain",
        "query": {
          "depth": [
            "1"
          ]
        },
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${objectId}/explain",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "depth": 100,
          "objectId": "38981961-5cc3-4e79-b070-a9ca52a194a1"
        },
        "matchingRules": {
          "body": {
            "$.depth": {
              "matchers": [
                {
                  "match": "number"
                }
              ],
              "combine": "AND"
            },
            "$.objectId": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.depth": {
              "type": "RandomInt",
              "min": 0,
              "max": 2147483647
            },
            "$.objectId": {
              "type": "ProviderState",
              "expression": "${objectId}",
              "dataType": "STRING"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy for a workspace"
        }
      ]
    },
    {
      "description": "A request to list the valid regions for a policy",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/region/b0a68991-836d-4090-b841-49115ef4893c/list-valid",
        "query": {
          "platform": [
            "azure"
          ]
        },
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/region/${objectId}/list-valid",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": [
          "string"
        ],
        "matchingRules": {
          "body": {
            "$[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$[0]": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy for a workspace"
        }
      ]
    },
    {
      "description": "A request to retrieve a policy",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/pao/107ee60a-69ba-45f4-8ced-67df7011a648",
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${objectId}",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "component": "WSM",
          "effectiveAttributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "attributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "objectId": "107ee60a-69ba-45f4-8ced-67df7011a648",
          "objectType": "workspace"
        },
        "matchingRules": {
          "body": {
            "$.objectId": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.effectiveAttributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.effectiveAttributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.objectId": {
              "type": "ProviderState",
              "expression": "${objectId}",
              "dataType": "RAW"
            },
            "$.effectiveAttributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.effectiveAttributes[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy for a workspace"
        }
      ]
    },
    {
      "description": "A request to link the policies",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616/link",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "updateMode": "FAIL_ON_CONFLICT",
          "sourceObjectId": "a254714b-4519-4ce4-ad87-19a7143376f4"
        },
        "matchingRules": {
          "body": {
            "$.sourceObjectId": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.updateMode": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "DRY_RUN|FAIL_ON_CONFLICT|ENFORCE_CONFLICT"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.sourceObjectId": {
              "type": "ProviderState",
              "expression": "${secondObjectId}",
              "dataType": "RAW"
            },
            "$.updateMode": {
              "type": "Regex",
              "regex": "DRY_RUN|FAIL_ON_CONFLICT|ENFORCE_CONFLICT"
            }
          },
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/$s/link",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "updateApplied": true,
          "conflicts": [

          ],
          "resultingPao": {

          }
        },
        "matchingRules": {
          "body": {
            "$.updateApplied": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy"
        },
        {
          "name": "another existing policy"
        }
      ]
    },
    {
      "description": "A request to create a policy",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/pao",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "component": "BPM",
          "attributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "objectId": "e2490de5-5bd3-43d5-b7c4-526e33f71304",
          "objectType": "workspace"
        },
        "matchingRules": {
          "body": {
            "$.objectId": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                }
              ],
              "combine": "AND"
            },
            "$.objectType": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "dataset|snapshot|billing-profile|workspace"
                }
              ],
              "combine": "AND"
            },
            "$.component": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "BPM|WSM|TDR"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.objectId": {
              "type": "Uuid"
            },
            "$.objectType": {
              "type": "Regex",
              "regex": "dataset|snapshot|billing-profile|workspace"
            },
            "$.component": {
              "type": "Regex",
              "regex": "BPM|WSM|TDR"
            },
            "$.attributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "response": {
        "status": 409
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to create a policy that already exists",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/pao",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "component": "BPM",
          "attributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "objectId": "e2490de5-5bd3-43d5-b7c4-526e33f71304",
          "objectType": "billing-profile"
        },
        "matchingRules": {
          "body": {
            "$.objectId": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                }
              ],
              "combine": "AND"
            },
            "$.objectType": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "dataset|snapshot|billing-profile|workspace"
                }
              ],
              "combine": "AND"
            },
            "$.component": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "BPM|WSM|TDR"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.objectId": {
              "type": "Uuid"
            },
            "$.objectType": {
              "type": "Regex",
              "regex": "dataset|snapshot|billing-profile|workspace"
            },
            "$.component": {
              "type": "Regex",
              "regex": "BPM|WSM|TDR"
            },
            "$.attributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "response": {
        "status": 409
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to delete a policy",
      "request": {
        "method": "DELETE",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616",
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${policyId}",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to explain the policy",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616/explain",
        "query": {
          "depth": [
            "8687"
          ]
        },
        "matchingRules": {
          "query": {
            "depth": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "\\d+"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${policyId}/explain",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "depth": 100,
          "objectId": "bea1edd0-a8e6-4d60-a613-e8e065f21616"
        },
        "matchingRules": {
          "body": {
            "$.depth": {
              "matchers": [
                {
                  "match": "number"
                }
              ],
              "combine": "AND"
            },
            "$.objectId": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.depth": {
              "type": "RandomInt",
              "min": 0,
              "max": 2147483647
            },
            "$.objectId": {
              "type": "ProviderState",
              "expression": "${policyId}",
              "dataType": "STRING"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to list the valid regions for a policy",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/location/list-valid",
        "headers": {
          "Content-Type": "application/json"
        },
        "query": {
          "platform": [
            "azure"
          ]
        },
        "body": {
          "inputs": [
            {
              "namespace": "string",
              "name": "string"
            }
          ]
        },
        "matchingRules": {
          "body": {
            "$.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "query": {
            "platform": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "gcp|azure|aws"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": [
          "string"
        ],
        "matchingRules": {
          "body": {
            "$[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$[0]": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to list the valid regions for a policy using policy input",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/location/list-valid",
        "headers": {
          "Content-Type": "application/json"
        },
        "query": {
          "platform": [
            "aws"
          ]
        },
        "body": {
          "inputs": [
            {
              "namespace": "string",
              "name": "string"
            }
          ]
        },
        "matchingRules": {
          "body": {
            "$.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "query": {
            "platform": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "gcp|azure|aws"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": [
          "string"
        ],
        "matchingRules": {
          "body": {
            "$[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$[0]": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to list the valid regions for a policy using the id",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/region/bea1edd0-a8e6-4d60-a613-e8e065f21616/list-valid",
        "query": {
          "platform": [
            "gcp"
          ]
        },
        "matchingRules": {
          "query": {
            "platform": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "gcp|azure|aws"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/region/${policyId}/list-valid",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": [
          "string"
        ],
        "matchingRules": {
          "body": {
            "$[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$[0]": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to retrieve a policy",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616",
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${policyId}",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "component": "BPM",
          "effectiveAttributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "attributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "objectId": "bea1edd0-a8e6-4d60-a613-e8e065f21616",
          "objectType": "dataset"
        },
        "matchingRules": {
          "body": {
            "$.objectId": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.component": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "BPM|WSM|TDR"
                }
              ],
              "combine": "AND"
            },
            "$.objectType": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "dataset|snapshot|billing-profile|workspace"
                }
              ],
              "combine": "AND"
            },
            "$.effectiveAttributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.effectiveAttributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.objectId": {
              "type": "ProviderState",
              "expression": "${policyId}",
              "dataType": "RAW"
            },
            "$.component": {
              "type": "Regex",
              "regex": "BPM|WSM|TDR"
            },
            "$.objectType": {
              "type": "Regex",
              "regex": "dataset|snapshot|billing-profile|workspace"
            },
            "$.effectiveAttributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.effectiveAttributes[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to update a policy",
      "request": {
        "method": "PATCH",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "updateMode": "DRY_RUN",
          "addAttributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "removeAttributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          }
        },
        "matchingRules": {
          "body": {
            "$.addAttributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.addAttributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.removeAttributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.removeAttributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.updateMode": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "DRY_RUN|FAIL_ON_CONFLICT|ENFORCE_CONFLICT"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.addAttributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.addAttributes[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$.removeAttributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.removeAttributes[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$.updateMode": {
              "type": "Regex",
              "regex": "DRY_RUN|FAIL_ON_CONFLICT|ENFORCE_CONFLICT"
            }
          },
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${policyId}",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "updateApplied": true,
          "conflicts": [

          ],
          "resultingPao": {

          }
        },
        "matchingRules": {
          "body": {
            "$.updateApplied": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing policy"
        }
      ]
    },
    {
      "description": "A request to link the policies",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616/link",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "updateMode": "DRY_RUN",
          "sourceObjectId": "a254714b-4519-4ce4-ad87-19a7143376f4"
        },
        "matchingRules": {
          "body": {
            "$.sourceObjectId": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.updateMode": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "DRY_RUN|FAIL_ON_CONFLICT|ENFORCE_CONFLICT"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.sourceObjectId": {
              "type": "ProviderState",
              "expression": "${secondObjectId}",
              "dataType": "RAW"
            },
            "$.updateMode": {
              "type": "Regex",
              "regex": "DRY_RUN|FAIL_ON_CONFLICT|ENFORCE_CONFLICT"
            }
          },
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${objectId}/link",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "updateApplied": true,
          "conflicts": [

          ],
          "resultingPao": {

          }
        },
        "matchingRules": {
          "body": {
            "$.updateApplied": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing workspace policy"
        },
        {
          "name": "another existing policy"
        }
      ]
    },
    {
      "description": "A request to create a policy",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/pao",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "component": "BPM",
          "attributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "objectId": "e2490de5-5bd3-43d5-b7c4-526e33f71304",
          "objectType": "billing-profile"
        },
        "matchingRules": {
          "body": {
            "$.objectId": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                }
              ],
              "combine": "AND"
            },
            "$.objectType": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "dataset|snapshot|billing-profile|workspace"
                }
              ],
              "combine": "AND"
            },
            "$.component": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "BPM|WSM|TDR"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.objectId": {
              "type": "Uuid"
            },
            "$.objectType": {
              "type": "Regex",
              "regex": "dataset|snapshot|billing-profile|workspace"
            },
            "$.component": {
              "type": "Regex",
              "regex": "BPM|WSM|TDR"
            },
            "$.attributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "response": {
        "status": 409
      },
      "providerStates": [
        {
          "name": "an existing workspace policy"
        }
      ]
    },
    {
      "description": "A request to delete a policy",
      "request": {
        "method": "DELETE",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616",
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${objectId}",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200
      },
      "providerStates": [
        {
          "name": "an existing workspace policy"
        }
      ]
    },
    {
      "description": "A request to explain the policy",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616/explain",
        "query": {
          "depth": [
            "3"
          ]
        },
        "matchingRules": {
          "query": {
            "depth": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "\\d+"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${objectId}/explain",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "depth": 100,
          "objectId": "bea1edd0-a8e6-4d60-a613-e8e065f21616"
        },
        "matchingRules": {
          "body": {
            "$.depth": {
              "matchers": [
                {
                  "match": "number"
                }
              ],
              "combine": "AND"
            },
            "$.objectId": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.depth": {
              "type": "RandomInt",
              "min": 0,
              "max": 2147483647
            },
            "$.objectId": {
              "type": "ProviderState",
              "expression": "${objectId}",
              "dataType": "STRING"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing workspace policy"
        }
      ]
    },
    {
      "description": "A request to list the valid regions for a policy",
      "request": {
        "method": "POST",
        "path": "/api/policy/v1alpha1/location/list-valid",
        "headers": {
          "Content-Type": "application/json"
        },
        "query": {
          "platform": [
            "azure"
          ]
        },
        "body": {
          "inputs": [
            {
              "namespace": "string",
              "name": "string"
            }
          ]
        },
        "matchingRules": {
          "body": {
            "$.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "query": {
            "platform": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "gcp|azure|aws"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": [
          "string"
        ],
        "matchingRules": {
          "body": {
            "$[0]": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$[0]": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing workspace policy"
        }
      ]
    },
    {
      "description": "A request to retrieve a policy",
      "request": {
        "method": "GET",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616",
        "generators": {
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${objectId}",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "component": "WSM",
          "effectiveAttributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "attributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "objectId": "bea1edd0-a8e6-4d60-a613-e8e065f21616",
          "objectType": "dataset"
        },
        "matchingRules": {
          "body": {
            "$.objectId": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.component": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "BPM|WSM|TDR"
                }
              ],
              "combine": "AND"
            },
            "$.objectType": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "dataset|snapshot|billing-profile|workspace"
                }
              ],
              "combine": "AND"
            },
            "$.effectiveAttributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.effectiveAttributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.attributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.objectId": {
              "type": "ProviderState",
              "expression": "${objectId}",
              "dataType": "RAW"
            },
            "$.component": {
              "type": "Regex",
              "regex": "BPM|WSM|TDR"
            },
            "$.objectType": {
              "type": "Regex",
              "regex": "dataset|snapshot|billing-profile|workspace"
            },
            "$.effectiveAttributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.effectiveAttributes[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.attributes[0].name": {
              "type": "RandomString",
              "size": 20
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing workspace policy"
        }
      ]
    },
    {
      "description": "A request to update a policy",
      "request": {
        "method": "PATCH",
        "path": "/api/policy/v1alpha1/pao/bea1edd0-a8e6-4d60-a613-e8e065f21616",
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "updateMode": "DRY_RUN",
          "addAttributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          },
          "removeAttributes": {
            "inputs": [
              {
                "namespace": "string",
                "name": "string"
              }
            ]
          }
        },
        "matchingRules": {
          "body": {
            "$.addAttributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.addAttributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.removeAttributes.inputs[0].namespace": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.removeAttributes.inputs[0].name": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            },
            "$.updateMode": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "DRY_RUN|FAIL_ON_CONFLICT|ENFORCE_CONFLICT"
                }
              ],
              "combine": "AND"
            }
          }
        },
        "generators": {
          "body": {
            "$.addAttributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.addAttributes[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$.removeAttributes[0].namespace": {
              "type": "RandomString",
              "size": 20
            },
            "$.removeAttributes[0].name": {
              "type": "RandomString",
              "size": 20
            },
            "$.updateMode": {
              "type": "Regex",
              "regex": "DRY_RUN|FAIL_ON_CONFLICT|ENFORCE_CONFLICT"
            }
          },
          "path": {
            "type": "ProviderState",
            "expression": "/api/policy/v1alpha1/pao/${objectId}",
            "dataType": "STRING"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "updateApplied": true,
          "conflicts": [

          ],
          "resultingPao": {

          }
        },
        "matchingRules": {
          "body": {
            "$.updateApplied": {
              "matchers": [
                {
                  "match": "type"
                }
              ],
              "combine": "AND"
            }
          },
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "an existing workspace policy"
        }
      ]
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "3.0.0"
    },
    "pact-jvm": {
      "version": "4.1.7"
    }
  }
}
