# This file is named policy-application.yml file instead of application.yml since policy is still
# deployed as a library. We don't want the application.yml in this library to conflict with any
# application.yml where it is imported. Once tps is no longer a library this can be changed to
# plain application.yml as expected.

# All env variables that are used in one place
# This is for deployment-specific values, which may be managed by other teams
env:
  db:
    host: jdbc:postgresql://${DATABASE_HOSTNAME:127.0.0.1}:5432
    init: ${INIT_DB:false}
    policy:
      name: ${POLICY_DATABASE_NAME:policy_db}
      pass: ${POLICY_DATABASE_USER_PASSWORD:dbpwd}
      user: ${POLICY_DATABASE_USER:dbuser}
  tracing:
    exportEnabled: ${CLOUD_TRACE_ENABLED:false}
    samplingRate: ${SAMPLING_PROBABILITY:0}

# Below here is non-deployment-specific

# When the target is 'local' the write-config.sh script will generate this properties file. It
# contains the configuration of the TPS test application. We can use that application in our
# integration testing to make sure the application code paths are working. However, we do not
# want it to appear in production environments.
# Imports are treated as additional documents inserted below this one, so the
# properties in local-properties are guaranteed to override values here in application.yml
spring.config.import: optional:file:../config/local-properties.yml, classpath:rendered/version.properties

logging.pattern.level: '%X{requestId} %5p'

server:
  compression:
    enabled: true
    mime-types: text/css,application/javascript
  port: 8080

spring:
  application.name: policy
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 0
          must-revalidate: true
        use-last-modified: false
      static-locations: classpath:/static/

terra.common:
  kubernetes:
    in-kubernetes: false
  tracing:
    sampling-ratio: ${env.tracing.samplingRate}
  google:
    tracing:
      enabled: ${env.tracing.exportEnabled}

# Terra Policy Service configuration
policy:
  policy-database:
    initialize-on-start: ${env.db.init}
    password: ${env.db.policy.pass}
    upgrade-on-start: true
    uri: ${env.db.host}/${env.db.policy.name}
    username: ${env.db.policy.user}

management:
  server:
    port: 9098

otel:
  sdk:
    disabled: false # set to true to disable all open telemetry features

  springboot:
    resource:
      attributes:
        service:
          name: ${spring.application.name}
          version: ${tps.version.gitTag:unknown}
